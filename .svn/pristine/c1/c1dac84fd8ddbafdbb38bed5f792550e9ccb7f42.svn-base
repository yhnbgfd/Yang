using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using WindowsFormsApplication1.DataDef;
using System.Drawing;

namespace WindowsFormsApplication1.Method
{
    class GenerateData
    {
        Dictionary<int, totalDataBase> m_totalDataBase = new Dictionary<int, totalDataBase>();

        public int s;                                       //s为要取的个数
        public int e;                                       //e为要取得基数的总数
        public List<int> dataSets;                          
        totalDataBase DataValue = new totalDataBase();
        //Algorithm2 start
        public int[] x;
        List<int[]> alInt = new List<int[]>();

        public Dictionary<int, totalDataBase> run()
        {
            Algorithm2(s, e);
            for (int i = 0; i < alInt.Count(); i++)
            {
                DataValue = new totalDataBase();
                DataValue.Tag = 0;//默认标记0
                DataValue.TValue = new int[s];
                DataValue.ColorValue = new Color[s];

                for (int j = 0; j < s; j++)
                {
                    DataValue.TValue[j] = alInt[i][j];
                    DataValue.ColorValue[j] = Color.White;
                }
                m_totalDataBase.Add(m_totalDataBase.Count() + 1, DataValue);
            }
            return m_totalDataBase;
        }

        void Algorithm2(int aa, int bb)//bb取aa
        {
            x = new int[aa];
            for (int i = 0; i < bb; i++)
            {
                x[0] = dataSets[i];
                for (int j = 1 + i; j < bb; j++)
                {
                    x[1] = dataSets[j];
                    for (int k = 1 + j; k < bb; k++)
                    {
                        x[2] = dataSets[k];
                        if (aa >= 4)
                            for (int l = 1 + k; l < bb; l++)
                            {
                                x[3] = dataSets[l];
                                if (aa >= 5)
                                    for (int m = 1 + l; m < bb; m++)
                                    {
                                        x[4] = dataSets[m];
                                        if (aa >= 6)
                                            for (int n = 1 + m; n < bb; n++)
                                            {
                                                x[5] = dataSets[n];
                                                if (aa >= 7)
                                                    for (int o = 1 + n; o < bb; o++)
                                                    {
                                                        x[6] = dataSets[o];
                                                        if (aa >= 8)
                                                            for (int v = 1 + o; v < bb; v++)
                                                            {
                                                                x[7] = dataSets[v];
                                                                output();
                                                            }
                                                        else
                                                            output();
                                                    }
                                                else
                                                    output();
                                            }
                                        else
                                            output();
                                    }
                                else
                                    output();
                            }
                        else
                            output();
                    }
                }

            }
        }
        private void output()
        {
            int[] i_test = new int[s];
            for (int i = 0; i < s; i++)
                i_test[i] = x[i];
            alInt.Add(i_test);
        }
        //end Algorithm2
    }
}
