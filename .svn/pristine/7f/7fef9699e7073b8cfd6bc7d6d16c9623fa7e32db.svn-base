using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

using WindowsFormsApplication1.DataDef;
using WindowsFormsApplication1.Method;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
        #region valueDef

        private Dictionary<int, totalDataBase> m_totalDataBase = new Dictionary<int, totalDataBase>();//全局总库
        Dictionary<int, Color> D_ColorTemptDict = new Dictionary<int, Color>();
        List<int> choiceDate = new List<int>();             //定义获取勾选的数字
        
        private int SelectNum = 0;
        private int TotalNum = 0;

        private Color ChoiceColor = Color.Red;

        private int m_Count_Operate;
        private int m_Count_Generate;

        private int[] Winning_Numbers;             //中奖号码
        private int Winning_Numbers_Mark = 0;                      //中奖号码标记

        #endregion

        public Form1()
        {
            InitializeComponent();
            comboBox5.SelectedIndex = 2;
            comboBox2.SelectedIndex = 0;
            comboBox3.SelectedIndex = 2;
            comboBox4.SelectedIndex = 0;
            comboBox_method2_operate.SelectedIndex = 0;
            comboBox_Mehod2_marked.SelectedIndex = 0;
            comboBox1.SelectedIndex = 0;
            checkedListBox1.SetItemChecked(0, true);
            for (int i = 1; i <= 10; i++)
            {
                string controlName = "checkedListBox" + i.ToString();
                CheckedListBox clb = (CheckedListBox)findControl(panel1, controlName);
                clb.SetItemChecked(0, true);
                clb.SetItemChecked(1, true);
                if(i<7)
                    clb.SetItemChecked(2, true);
            }
            InitDataGridView1();
        }

        private void InitDataGridView1()
        {
            string[] sort = { "0三角形", 
                                "1三角形", "2三角形", 
                                "1四边形", " 1四1三", " 1四2三", 
                                "2四边形", " 2四1三", " 2四2三", 
                                "1五角星", " 1五1三", " 1五2三", " 1五1四", " 1五1四1三", " 1五1四2三", " 1五2四", " 1五2四1三", " 1五2四2三", 
                                "2五角星", " 2五1三", " 2五2三", " 2五1四", " 2五1四1三", " 2五1四2三", " 2五2四", " 2五2四1三", " 2五2四2三", 
                                "3五角星", " 3五1三", " 3五2三", " 3五1四", " 3五1四1三", " 3五1四2三", " 3五2四", " 3五2四1三", " 3五2四2三", 
                                "4五角星", " 4五1三", " 4五2三", " 4五1四", " 4五1四1三", " 4五1四2三", " 4五2四", " 4五2四1三", " 4五2四2三", 
                                "5五角星", " 5五1三", " 5五2三", " 5五1四", " 5五1四1三", " 5五1四2三", " 5五2四", " 5五2四1三", " 5五2四2三", 
                                "超出" 
                            };
            DataGridViewRowCollection rows = this.dataGridView1.Rows;
            for (int i = 0; i < 55; i++ )
            {
                rows.Add( i + 1, sort[i], 0, "查看" );
            }
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex == 3)
            {
                richTextBox1.Text = "";
                int tab = e.RowIndex;
                string text = "";
                foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
                {
                    if (tab == 54 && kvp.Value.Tag >= tab)
                    {
                        for (int i = 0; i < SelectNum; i++)
                        {
                            if (kvp.Value.TValue[i] < 10)
                                text += " ";
                            text += kvp.Value.TValue[i] + " ";
                        }
                        text += "\n";
                    }
                    else if (kvp.Value.Tag == tab)
                    {
                        for (int i = 0; i < SelectNum; i++)
                        {
                            if (kvp.Value.TValue[i] < 10)
                                text += " ";
                            text += kvp.Value.TValue[i] + " ";
                        }
                        text += "\n";
                    }
                }
                richTextBox1.Text = text;
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //Console.WriteLine("Form1_Load");
        }

        /* 中奖号码的数组比较方法 */
        private void Winning_Numbers_Compare(int[] TValue, int cTab)
        {
            bool isSame = true;
            for (int i = 0; i < SelectNum; i++)
            {
                if (TValue[i] != Winning_Numbers[i])
                    isSame = false;
            }
            if (isSame)
            {
                Winning_Numbers_Mark += cTab;
                label34.Text = "目标号码当前标记：" + Winning_Numbers_Mark.ToString();
            }
        }

        /* 检查checkedListBox勾选 */
        private List<int> checkchoice_checkedListBox()
        {
            TotalNum = 0;//清空统计
            List<int> choiceDate = new List<int>();
            for (int i = 0; i < checkedListBox1.Items.Count; i++)
            {
                //choiceDate[i] = i + 1;
                if (checkedListBox1.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox1.GetItemText(checkedListBox1.Items[i]))); };
                if (checkedListBox2.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox2.GetItemText(checkedListBox2.Items[i]))); };
                if (checkedListBox3.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox3.GetItemText(checkedListBox3.Items[i]))); };
                if (checkedListBox4.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox4.GetItemText(checkedListBox4.Items[i]))); };
                if (checkedListBox5.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox5.GetItemText(checkedListBox5.Items[i]))); };
                if (checkedListBox6.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox6.GetItemText(checkedListBox6.Items[i]))); };
                if (checkedListBox7.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox7.GetItemText(checkedListBox7.Items[i]))); };
                if (checkedListBox8.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox8.GetItemText(checkedListBox8.Items[i]))); };
                if (checkedListBox9.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox9.GetItemText(checkedListBox9.Items[i]))); };
                if (checkedListBox10.GetItemChecked(i)) { choiceDate.Add(int.Parse(checkedListBox10.GetItemText(checkedListBox10.Items[i]))); };
                
            }
            //Console.WriteLine(TotalNum);
            TotalNum = choiceDate.Count;
            label6.Text = TotalNum.ToString();
            return choiceDate;
        }

        /* 查找控件方法 */
        private Control findControl(Control control, string controlName)
        {
            Control c1;
            foreach (Control c in control.Controls)
            {
                if (c.Name == controlName)
                {
                    return c;
                }
                else if (c.Controls.Count > 0)
                {
                    c1 = findControl(c, controlName);
                    if (c1 != null)
                    {
                        return c1;
                    }
                }
            }
            return null;
        } 

        /* 为点击的按钮着色 */
        private void digit_Button_Click(Button button)
        {
            if (button.BackColor == ChoiceColor)
                button.BackColor = Color.Transparent;
            else
                button.BackColor = ChoiceColor;

            if (button.BackColor == Color.Green || button.BackColor == Color.Blue || button.BackColor == Color.Indigo || button.BackColor == Color.Purple || button.BackColor == Color.Black )
                button.ForeColor = Color.White;
            else
                button.ForeColor = Color.Black;

            if (!D_ColorTemptDict.ContainsKey(int.Parse(button.Text)))
                D_ColorTemptDict.Add(int.Parse(button.Text), button.BackColor);
            else if (button.BackColor == Color.Transparent)
                D_ColorTemptDict.Remove(int.Parse(button.Text));
            else
                D_ColorTemptDict[int.Parse(button.Text)] = button.BackColor;
        }

        private void tabPage2_Click(object sender, EventArgs e)
        {

        }

        private void checkBox8_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox8.Checked)
            {
                for (int j = 0; j < checkedListBox5.Items.Count; j++)
                    checkedListBox5.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox5.Items.Count; j++)
                    checkedListBox5.SetItemChecked(j, false);
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            richTextBox1.Text = "点击“查看”显示结果";
            for (int i = 0; i < 55;i++ )
                dataGridView1.Rows[i].Cells[2].Value = 0;
            foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
            {
                if (kvp.Value.Tag >= 54)
                    dataGridView1.Rows[54].Cells[2].Value = (int)dataGridView1.Rows[54].Cells[2].Value + 1;
                else
                    dataGridView1.Rows[kvp.Value.Tag].Cells[2].Value = (int)dataGridView1.Rows[kvp.Value.Tag].Cells[2].Value + 1;
            }
            tabControl1.SelectedIndex = 3;
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox1.Checked)
            {
                for (int j = 0; j < checkedListBox1.Items.Count; j++)
                    checkedListBox1.SetItemChecked(j, true);
            }
            else
            {
                for (int j =0; j < checkedListBox1.Items.Count; j++)
                    checkedListBox1.SetItemChecked(j, false);
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Winning_Numbers = new int[SelectNum];
            for (int i = 0; i < SelectNum; i++)
            {
                string controlName = "textBox_win" + (i + 1).ToString();
                TextBox tb = (TextBox)findControl(panel1, controlName);
                if (tb.Text == "")
                    tb.Text = "0";
                Winning_Numbers[i] = int.Parse(tb.Text);
            }
            //清空第三页下方的统计数据
            m_Count_Operate = 0;
            count_generate.Text = "";
            count_operate.Text = "";
            label34.Text = "目标号码当前标记：";

            m_totalDataBase.Clear();
            /* 获取数据 */
            
            SelectNum = int.Parse(comboBox5.Text);              //M取N，获取N
            choiceDate = checkchoice_checkedListBox();          //获取勾选的数字
//            Console.WriteLine("SelectNum:" + SelectNum + ",TotalNum:" + TotalNum);
            /* 生成数据 */
            GenerateData gData = new GenerateData();
            gData.s = SelectNum;                                //s为要取的个数
            gData.e = TotalNum;                             //e为要取得基数的总数
            gData.x = new int[gData.s];
            gData.dataSets = choiceDate;                        //选择的数据集
            m_totalDataBase = gData.run();                      //计算并保存结果到全局总库
            /* 跳到下一个tab:逻辑查询操作tab */
            tabControl1.SelectedIndex = 2;                      //跳到编号为3的tab
            //激活被选中数字的按钮
            for (int i = 1; i <= 70; i++)
            {
                string controlName = "button_c" + i.ToString();
                Button bb = (Button)findControl(panel2, controlName);
                bb.Enabled = false;
                bb.BackColor = Color.White;
                bb.ForeColor = Color.Black;
            }
            for (int i = 0; i < TotalNum; i++)
            {
                string controlName = "button_c" + choiceDate[i].ToString();
                Button bb = (Button)findControl(panel2, controlName);
                bb.Enabled = true;
                bb.BackColor = Color.Transparent;
            }

            //屏蔽过量的五星定位输入框
            for (int i = 3; i < 8; i++)
            {
                string textBoxName = "textBox" + (i + 4).ToString();
                TextBox tb = (TextBox)findControl(panel2, textBoxName);
                if (i >= SelectNum)
                    tb.Enabled = false;
                else
                    tb.Enabled = true;
            }
        }

        private void checkBox2_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox2.Checked)
            {
                for (int j = 0; j < checkedListBox2.Items.Count; j++)
                    checkedListBox2.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox2.Items.Count; j++)
                    checkedListBox2.SetItemChecked(j, false);
            }
        }

        private void checkBox4_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox4.Checked)
            {
                for (int j = 0; j < checkedListBox3.Items.Count; j++)
                    checkedListBox3.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox3.Items.Count; j++)
                    checkedListBox3.SetItemChecked(j, false);
            }
        }

        private void checkBox3_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox3.Checked)
            {
                for (int j = 0; j < checkedListBox4.Items.Count; j++)
                    checkedListBox4.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox4.Items.Count; j++)
                    checkedListBox4.SetItemChecked(j, false);
            }
        }

        private void checkBox7_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox7.Checked)
            {
                for (int j = 0; j < checkedListBox6.Items.Count; j++)
                    checkedListBox6.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox6.Items.Count; j++)
                    checkedListBox6.SetItemChecked(j, false);
            }
        }

        private void checkBox6_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox6.Checked)
            {
                for (int j = 0; j < checkedListBox7.Items.Count; j++)
                    checkedListBox7.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox7.Items.Count; j++)
                    checkedListBox7.SetItemChecked(j, false);
            }
        }

        private void checkBox5_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox5.Checked)
            {
                for (int j = 0; j < checkedListBox8.Items.Count; j++)
                    checkedListBox8.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox8.Items.Count; j++)
                    checkedListBox8.SetItemChecked(j, false);
            }
        }

        private void checkBox10_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox10.Checked)
            {
                for (int j = 0; j < checkedListBox9.Items.Count; j++)
                    checkedListBox9.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox9.Items.Count; j++)
                    checkedListBox9.SetItemChecked(j, false);
            }
        }

        private void checkBox9_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox_0.Checked)
            {
                for (int j = 0; j < checkedListBox10.Items.Count; j++)
                    checkedListBox10.SetItemChecked(j, true);
            }
            else
            {
                for (int j = 0; j < checkedListBox10.Items.Count; j++)
                    checkedListBox10.SetItemChecked(j, false);
            }
        }

        private void checkedListBox11_SelectedIndexChanged(object sender, EventArgs e)
        {
            for (int j = 0; j < checkedListBox11.Items.Count; j++)
            {
                if (checkedListBox11.GetItemChecked(j))
                {
                    checkedListBox1.SetItemChecked(j, true);
                    checkedListBox2.SetItemChecked(j, true);
                    checkedListBox3.SetItemChecked(j, true);
                    checkedListBox4.SetItemChecked(j, true);
                    checkedListBox5.SetItemChecked(j, true);
                    checkedListBox6.SetItemChecked(j, true);
                    checkedListBox7.SetItemChecked(j, true);
                    checkedListBox8.SetItemChecked(j, true);
                    checkedListBox9.SetItemChecked(j, true);
                    checkedListBox10.SetItemChecked(j, true);
                   // textBox2.Text = (int.Parse(textBox2.Text) + 1).ToString();
                }
                else
                {
                    checkedListBox1.SetItemChecked(j, false);
                    checkedListBox2.SetItemChecked(j, false);
                    checkedListBox3.SetItemChecked(j, false);
                    checkedListBox4.SetItemChecked(j, false);
                    checkedListBox5.SetItemChecked(j, false);
                    checkedListBox6.SetItemChecked(j, false);
                    checkedListBox7.SetItemChecked(j, false);
                    checkedListBox8.SetItemChecked(j, false);
                    checkedListBox9.SetItemChecked(j, false);
                    checkedListBox10.SetItemChecked(j, false);
                   // textBox2.Text = (int.Parse(textBox2.Text) - 1).ToString();
                }
            }
        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {
            if (textBox2.Text == "")
                textBox2.Text = "3";
            int num = int.Parse(textBox2.Text);
            label6.Text = textBox2.Text;
            bool checkState = true;
            for (int i = 0; i < checkedListBox1.Items.Count; i++)
            {
                checkedListBox1.SetItemChecked(i, checkState); if (--num == 0) checkState=false;
                checkedListBox2.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox3.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox4.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox5.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox6.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox7.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox8.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox9.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
                checkedListBox10.SetItemChecked(i, checkState); if (--num == 0) checkState = false;
            }
        }
        /* 进行下一组操作 */

        private void button5_Click(object sender, EventArgs e)
        {
            for (int j = 0; j < checkedListBox11.Items.Count; j++)
            {
                checkedListBox1.SetItemChecked(j, false);
                checkedListBox2.SetItemChecked(j, false);
                checkedListBox3.SetItemChecked(j, false);
                checkedListBox4.SetItemChecked(j, false);
                checkedListBox5.SetItemChecked(j, false);
                checkedListBox6.SetItemChecked(j, false);
                checkedListBox7.SetItemChecked(j, false);
                checkedListBox8.SetItemChecked(j, false);
                checkedListBox9.SetItemChecked(j, false);
                checkedListBox10.SetItemChecked(j, false);
                checkedListBox11.SetItemChecked(j, false);
            }
            checkBox1.Checked = false;
            checkBox2.Checked = false;
            checkBox3.Checked = false;
            checkBox4.Checked = false;
            checkBox5.Checked = false;
            checkBox6.Checked = false;
            checkBox7.Checked = false;
            checkBox8.Checked = false;
            checkBox10.Checked = false;
            checkBox_0.Checked = false;
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Red;
        }

        private void radioButton2_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Orange;
        }

        private void radioButton3_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Yellow;
        }

        private void radioButton4_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Green;
        }

        private void radioButton5_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Blue;
        }

        private void radioButton6_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Indigo;
        }

        private void radioButton7_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Purple;
        }

        private void button6_Click(object sender, EventArgs e)
        {
            button_c1.BackColor = ChoiceColor;
        }
        /* 1-70个按钮的通用事件 */
        private void button_cx_Click(object sender, EventArgs e)
        {
            digit_Button_Click((Button)sender);
        }
        /* 标记按钮1 */
        private void button76_Click(object sender, EventArgs e)
        {
            string buttonName = ((Button)sender).Name;
            //保存颜色数据到总库
            foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
            {
                for (int i = 0; i < SelectNum; i++)
                {
                    kvp.Value.ColorValue[i] = Color.White;
                    if (D_ColorTemptDict.ContainsKey((kvp.Value).TValue[i]))
                        kvp.Value.ColorValue[i] = D_ColorTemptDict[kvp.Value.TValue[i]];
                }
            }
            //get the pomenont param
            string logicalOperation = comboBox2.Text;
            int count = int.Parse(comboBox3.Text);
            //this is get the customer mark,we should defind it.tempt method
            int cTab ;//= comboBox4.SelectedIndex;
            switch (comboBox4.SelectedIndex)
            {
                case 0://三角形
                    cTab = 1;
                    break;
                case 1://四边形
                    cTab = 3;
                    break;
                case 2://五边形
                    cTab = 9;
                    break;
                case 3:
                    cTab = 54;
                    break;
                case 4:
                    cTab = 0;

                    break;
                default:
                    cTab = 0;
                    break;
            }
            int temptCount = 0;
            //接下来要把标记后totalDataBase.tab的增量算出来并存起来。
            if (cTab != 0)
            {
                if (buttonName.IndexOf("minus") > 0)
                    cTab = -cTab;
                foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
                {
                    for (int i = 0; i < kvp.Value.ColorValue.Length; i++)
                    {
                        //if the kvp color equal the marked color,temptCount +1
                        if (kvp.Value.ColorValue[i] == ChoiceColor)
                        {
                            temptCount++;
                        }
                    }
                    //judge the tmpet whether reach the requirement,then deal the datevalue(tag)
                    if (count != 50 && count != 60 && count != 70)
                    {
                        switch (logicalOperation)
                        {
                            case "<=":
                                if (temptCount <= count)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                            case "=":
                                if (temptCount == count)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                            case ">=":
                                if (temptCount >= count)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                            case "!=":
                                if (temptCount != count)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                            default:
                                break;
                        }
                    }
                    else    //
                    {
                        switch (logicalOperation)
                        {
                            case "=":
                                if (temptCount == count / 10 || temptCount == 0)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                            case "!=":
                                if (temptCount != count / 10 || temptCount != 0)
                                {
                                    kvp.Value.Tag += cTab;
                                    m_Count_Generate++;
                                    Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                                }
                                break;
                        }
                    }
                    temptCount = 0;
                }
            }
            else //cTab == 0
            {
                m_Count_Generate = 0;
            }
            //count the use operate data
            count_generate.Text = "本次操作共标记" + m_Count_Generate + "注";
            m_Count_Operate++;
            count_operate.Text = "您已经进行了" + m_Count_Operate + "次操作";
            m_Count_Generate = 0;

        }

        /* 标记按钮2 ------ 五色齐 */
        private void button_method2mark_Click(object sender, EventArgs e)
        {
            string buttonName = ((Button)sender).Name;
            //database color mark
            bool newColor = true;
            foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
            {
                kvp.Value.DiffColorNum = 0;
                for (int i = 0; i < SelectNum; i++)
                {
                    kvp.Value.ColorValue[i] = Color.White;
                    if (D_ColorTemptDict.ContainsKey(kvp.Value.TValue[i]) && D_ColorTemptDict[kvp.Value.TValue[i]] != Color.White)//如果这个数字有颜色
                    {
                        kvp.Value.ColorValue[i] = D_ColorTemptDict[kvp.Value.TValue[i]];//颜色存到总库
                        for (int j = 0; j < i; j++)
                        {
                            if (kvp.Value.ColorValue[i] == kvp.Value.ColorValue[j])//如果跟前面的颜色相同，即重复了，标记为不是新颜色
                                newColor = false;//
                        }
                        if (newColor)
                            kvp.Value.DiffColorNum++;
                        newColor = true;
                    }
                }
            }
            
            //get the pomenomt param
            int operation = comboBox_method2_operate.SelectedIndex;
            int marked = comboBox_Mehod2_marked.SelectedIndex;
            int diffColorNum;
            switch (operation)
            {
                case 0:
                    diffColorNum = 3;
                    break;
                case 1:
                    diffColorNum = 4;
                    break;
                case 2:
                    diffColorNum = 5;
                    break;
                case 3:
                    diffColorNum = 6;
                    break;
                case 4:
                    diffColorNum = 7;
                    break;
                case 5:
                    diffColorNum = 8;
                    break;
                default:
                    diffColorNum = 0;
                    break;
            }
            int cTab;
            switch (marked)
            {
                case 0://三角形
                    cTab = 1;
                    break;
                case 1://四边形
                    cTab = 3;
                    break;
                case 2://五边形
                    cTab = 9;
                    break;
                case 3:
                    cTab = 54;
                    break;
                case 4:
                    cTab = 0;
                    break;
                default:
                    cTab = 0;
                    break;
            }
            if (cTab != 0)
            {
                if (buttonName.IndexOf("minus") > 0)
                    cTab = -cTab;
                foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
                {
                    if (kvp.Value.DiffColorNum == diffColorNum)
                    {
                        kvp.Value.Tag += cTab;
                        m_Count_Generate++;
                        Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                    }
                }
            }
            else
            {
                m_Count_Generate = 0;
            }
            //count the use operate data
            count_generate.Text = "本次操作共标记" + m_Count_Generate + "注";
            m_Count_Operate++;
            count_operate.Text = "您已经进行了" + m_Count_Operate + "次操作";
            m_Count_Generate = 0;
        }

        private void linkLabel_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            richTextBox1.Text = "";
            LinkLabel p = sender as LinkLabel;          //获取控件的名称p.Name
            int tab = 0;//= int.Parse(p.Name.Substring(p.Name.LastIndexOf("l")+1));
            switch (int.Parse(p.Name.Substring(p.Name.LastIndexOf("l") + 1)))
            {
                case 0:
                    tab = 0;
                    break;
                case 1:
                    tab = 1;
                    break;
                case 2:
                    tab = 2;
                    break;
                case 3:
                    tab = 3;
                    break;
                case 4:
                    tab = 6;
                    break;
                case 5:
                    tab = 9;
                    break;
                default:
                    break;
            }
            string text = "";
            foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
            {
                if (kvp.Value.Tag == tab)
                {
                    for (int i = 0; i < SelectNum; i++)
                    {
                        if (kvp.Value.TValue[i] < 10)
                            text += " ";
                        text += kvp.Value.TValue[i] + " ";
                    }
                   text += "\n";
                }
            }
            richTextBox1.Text = text;
        }

        /* 标记按钮3 ------ 五星定位 */
        private void button4_Click_1(object sender, EventArgs e)
        {
            string buttonName = ((Button)sender).Name;
            string[] text = new string[8];
            text[0] = textBox4.Text;
            text[1] = textBox5.Text;
            text[2] = textBox6.Text;
            text[3] = textBox7.Text;
            text[4] = textBox8.Text;
            text[5] = textBox9.Text;
            text[6] = textBox10.Text;
            text[7] = textBox11.Text;
            bool isAllX = true;
            for(int i=0;i<8;i++)
            {
                if (text[i] != "x" && text[i] != "")
                {
                    isAllX = false;
                }
            }
            if (isAllX)
                return;
            int cTab;
            switch (comboBox1.SelectedIndex)
            {
                case 0://三角形
                    cTab = 1;
                    break;
                case 1://四边形
                    cTab = 3;
                    break;
                case 2://五边形
                    cTab = 9;
                    break;
                case 3:
                    cTab = 54;
                    break;
                case 4:
                    cTab = 0;
                    break;
                default:
                    cTab = 0;
                    break;
            }
            bool isTrue = false;
            if (cTab != 0)
            {
                if (buttonName.IndexOf("minus") > 0)
                    cTab = -cTab;
                foreach (KeyValuePair<int, totalDataBase> kvp in m_totalDataBase)
                {
                    for (int i = 0; i < SelectNum; i++)
                    {
                        if (text[i] == "x" || text[i] == "")
                        {
                            isTrue = true;
                            continue;
                        }
                        else if (kvp.Value.TValue[i] != int.Parse(text[i]))
                        {
                            isTrue = false;
                            break;
                        }
                        else
                            isTrue = true;
                    }
                    if (isTrue)
                    {
                        kvp.Value.Tag += cTab;
                        m_Count_Generate++;
                        Winning_Numbers_Compare(kvp.Value.TValue, cTab);
                    }
                }
            }
            else
            {
                m_Count_Generate = 0;
            }
            //count the use operate data
            count_generate.Text = "本次操作共标记" + m_Count_Generate + "注";
            m_Count_Operate++;
            count_operate.Text = "您已经进行了" + m_Count_Operate + "次操作";
            m_Count_Generate = 0;
        }

        private void button6_Click_1(object sender, EventArgs e)
        {
            List<int> array = new List<int>();
//            for (int i = 0; i < 20; i++)
//            {
//                array.Add(i);
//            }
            array = checkchoice_checkedListBox();
            Form2 fm2 = new Form2(array);
            //this.Hide();
            fm2.Show();
        }
        /* 清空颜色 */
        private void button7_Click(object sender, EventArgs e)
        {
            choiceDate = checkchoice_checkedListBox();          //获取勾选的数字
            for (int i = 0; i < TotalNum; i++ )
            {
                string controlName = "button_c" + choiceDate[i].ToString();
                Button bb = (Button)findControl(panel2, controlName);
                bb.BackColor = Color.Transparent;
                bb.ForeColor = Color.Black;
            }
            D_ColorTemptDict.Clear();
        }

        private void button10_Click(object sender, EventArgs e)
        {

        }

        private void comboBox5_SelectedIndexChanged(object sender, EventArgs e)
        {
            SelectNum = int.Parse(comboBox5.Text);
            for (int i = 1; i <= 8; i++)
            {
                string controlName = "textBox_win" + i.ToString();
                TextBox tb = (TextBox)findControl(panel1, controlName);
                if(i <= SelectNum)
                    tb.Enabled = true;
                else
                    tb.Enabled = false;
            }
        }

        private void radioButton9_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Gray;
        }

        private void radioButton8_CheckedChanged(object sender, EventArgs e)
        {
            ChoiceColor = Color.Black;
        }

        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox3.Text == "50" || comboBox3.Text == "60" || comboBox3.Text == "70")
                if (comboBox2.SelectedIndex != 2 && comboBox2.SelectedIndex !=3)    //未勾选等于or不等于
                    comboBox2.SelectedIndex = 2;
        }

        private void radioButton11_CheckedChanged(object sender, EventArgs e)
        {
            markRadioChecked(0);
        }

        private void radioButton12_CheckedChanged(object sender, EventArgs e)
        {
            markRadioChecked(1);
        }

        private void radioButton13_CheckedChanged(object sender, EventArgs e)
        {
            markRadioChecked(2);
        }

        private void radioButton10_CheckedChanged(object sender, EventArgs e)
        {
            markRadioChecked(3);
        }

        private void radioButton14_CheckedChanged(object sender, EventArgs e)
        {
            markRadioChecked(4);
        }

        private void markRadioChecked(int i)
        {
            comboBox4.SelectedIndex = i;
            comboBox_Mehod2_marked.SelectedIndex = i;
            comboBox1.SelectedIndex = i;
        }
        //只能输入数字跟删除
        private void numTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ((Keys)(e.KeyChar) == Keys.Back || (Keys)(e.KeyChar) == Keys.Delete)
            {
                return;
            }
            e.Handled = true;
            if (e.KeyChar >= '0' && e.KeyChar <= '9')
            {
                e.Handled = false;
            }
        }
    }
}
